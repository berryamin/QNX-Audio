# NLI Engine - iFly Natural Language Interpreter Configuration File
## Copyright (C) 2011 iFLYTEK.
## Use ';' and '#' character for notation
## Note: Commands in this cfg file is case sensitive

[iflyws_ctrl]
enable        = true
iflyws        =  ./grammar/digrule/Resource.irf
digital       =   ./grammar/digrule/digitalrule
digcalc       =   ./grammar/digrule/digitalcalc

[logger]
file			= ./log/nli.log
title			= NLI Engine Runtime Information
level			= 15
output			= 0
flush			= 
maxsize			= 
overwrite		= 0
#日志信息的过滤器，其中include是“仅包含”，exclude是“不包含”
#过滤字符串不支持通配符，字串之间以逗号“,”分割。
include			=
exclude			=

[pproc]
enable			= false
path				= ./pproc/postproc.dll


[resource]
#资源配置信息，目前包括文法网络、语义映射表和枚举类资源。
groups				= nlp
groups_name			= car
#groups				= tvs
#groups				= changtv
#groups				= lenovo
#groups				= lenotv
#groups				= huawei
#groups				= ivr
#groups				= onboard
meaningfile	= ./grammar/meaningfile.txt
enums				= ./resource/enums
table 			= ./grammar/list/tables
enumap			= ./grammar/list/enumap

[groups]
##手机语点
phone		= telephone|message|contacts|schedule|map|lbs|app|stock|weather|music|flight|train|restaurant|dialog|translation|websearch|news
##电视语点
tv			= -cmd|-app|website|stock|weather|other|video|tvchannel|music|train|flight
##长虹TV
changtv		= vedioCH|musicCH|websiteCH|weatherCH|dialogCH
##车载语点
#car		= cmd|map
car		= microblog|air_control|car_control|help|vehicle_info|contacts|app|news|translation|telephone|message|schedule|map|lbs|stock|weather|music|flight|train|restaurant|dialog|websearch|radio|traffic|cmd
##玩具语点
toy			= weather|-music|dialog|translation|poem|story|schedule
##电脑语点
pc			= telephone|message|contacts|schedule|map|lbs|app|stock|weather|music|flight|train|restaurant|dialog|translation|websearch|news|-cmd

[format]
#需要过滤的字符列表
trim_ch		= ,?;!{}[]
trim_gb		= ，。：；？!《》（）
#引擎输入输出编码格式：GBK/utf-8/BG2312/Unicode
input_enc		= utf-8
output_enc	= utf-8
#输出格式：XML(default)/JSOM/PLAIN/LABLE
format			= XML

[debug]
#是否效果调试模式，主要提供语音资源部效果调试时使用
#打开该开关，将输出详尽的文法匹配信息
enable			= false
#所有的语义将输出到这个日志中，缺省情况仅保留一句
logfile			= ./log/all_path.log
#记录所有解析过的语义结果，每个句子都将输出
mnfile			= ./log/mntrace.log

[misc]
outer_test		= true

[map_to_standard]
# 指定用于map_to_standard的映射表
# 格式：tag[:focus[:usrid]] = file_path:(第几列，缺省为第0列|做模糊匹配fuzzy|省市县区的特殊处理city):模糊匹配的最多候选数（缺省99）:模糊匹配无结果时是否消除原始名称（缺省false）

code:stock = ./grammar/list/tables/stock_name.table:1
code:website =  ./grammar/list/tables/website_name.table:1
code:telephone =  ./grammar/list/tables/service_num.table:1
code:message =  ./grammar/list/tables/service_num.table:1
code:contacts =  ./grammar/list/tables/service_num.table:1
name:telephone =  ./grammar/list/tables/service_num.table
name:message =  ./grammar/list/tables/service_num.table
name:contacts =  ./grammar/list/tables/service_num.table

name:radio =  ./grammar/list/tables/broadcast_name.table
name:website =  ./grammar/list/tables/website_name.bin:fuzzy:1:false:0.5
name:stock =  ./grammar/list/tables/stock_name.table
name:music =  ./grammar/list/tables/song_name.bin:fuzzy:1:true:0.5
singer =  ./grammar/list/tables/singer_name.table
city =  ./grammar/list/tables/weather_pot_name.table:city
area = ./grammar/list/tables/weather_pot_name.table:city
province =  ./grammar/list/tables/province_name.table:city
service_num = ./grammar/list/tables/service_num.table

